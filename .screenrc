escape ^ll
defescape ^ll
multiuser on
startup_message off
defscrollback 1000
# COLOR:  colors codes are combinations of
# [attribute modifier] [color description],
# eg "%{ambf}" where
# a=attribute,  m=modifier, and
# b=background, f=foreground.
# the manual talks of "attribute/color modifiers".
# see the manual, section "STRING ESCAPES".
#
# Color table:
# 0 Black             .    leave color unchanged
# 1 Red               b    blue
# 2 Green             c    cyan
# 3 Brown / yellow    d    default color
# 4 Blue              g    green           b    bold
# 5 Purple            k    blacK           B    blinking
# 6 Cyan              m    magenta         d    dim
# 7 White             r    red             r    reverse
# 8 unused/illegal    w    white           s    standout
# 9 transparent       y    yellow          u    underline
#
#
#
#hardstatus alwayslastline "[%S] %-w%{= BW}%50>%n %t%{-}%+w%<%=%{+b w.}%y-%m-%d %D %c"
caption always "%{= cW}%?%-Lw%?%{bw}[%n*%f %t%?(%u)%?]%{cW}%?%+Lw%?"
hardstatus alwayslastline "%{= RY}[%S]%{cW} %l%=%{+b Bk}%y-%m-%d %D %c"
# These are a little emacs-ish, but good clipboard integration commands:
# C-l y v: paste
# C-l y c: buffer -> clipboard
# C-l y y: clipboard -> buffer
# The C-v, C-c an C-y variants operate on the primary selection instead
bind y command -c clip
bind -c clip v exec .!. xsel -ob
bind -c clip ^V exec .!. xsel -o
bind -c clip y eval "exec /usr/bin/xsel -ob >/tmp/screen-exchange" "readbuf"
bind -c clip ^Y eval "exec /usr/bin/xsel -o >/tmp/screen-exchange" "readbuf"
bind -c clip c eval writebuf "exec /bin/sh -c '/usr/bin/xsel -ib </tmp/screen-exchange'"
bind -c clip ^C eval writebuf "exec /bin/sh -c '/usr/bin/xsel -i </tmp/screen-exchange'"

shelltitle sh
